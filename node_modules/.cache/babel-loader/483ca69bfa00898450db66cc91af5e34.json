{"ast":null,"code":"import _classCallCheck from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/saiqiong/mui/src/components/image-result/ImageResults.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport propType from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport FilmDetails from '../film-details/FilmDetails';\n\nvar ImageResults =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageResults, _React$Component);\n\n  function ImageResults() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageResults)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      //seleted: false,\n      film: [],\n      currentImg: \"\"\n    };\n\n    _this.handleOpen = function (img) {\n      //this.setState({ open: true, currentImg: img });\n      _this.setState({\n        seleted: true,\n        film: img\n      });\n\n      {\n        console.log(_this.state.seleted);\n      }\n      ;\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageResults, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var imageListContent;\n      var images = this.props.images;\n      var seleced = this.props.seleced; //    kk = 4;\n\n      {\n        console.log(kk);\n      }\n      ;\n\n      if (images) {\n        imageListContent = React.createElement(GridList, {\n          cols: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, images.map(function (img) {\n          return React.createElement(GridTile, {\n            title: img.show.name,\n            key: img.show.id,\n            subtitle: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }, \"type \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, img.show.type)),\n            actionIcon: React.createElement(IconButton, {\n              onClick: function onClick() {\n                return _this2.handleOpen(img);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, React.createElement(ZoomIn, {\n              color: \"white\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: img.show.image && img.show.image.medium ? img.show.image.medium : 'https://static.addtoany.com/images/dracaena-cinnabari.jpg',\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }));\n        })); //<img src={img.largeImageURL} alt=\"\" />\n      } else {\n        console.log('heehehehehehehehheh');\n        imageListContent = null;\n      }\n\n      var action = [React.createElement(FlatButton, {\n        label: \"Close\",\n        primary: true,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })];\n      console.log(this.state.film);\n\n      if (!this.state.seleted) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, imageListContent);\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(FilmDetails, {\n          selectedFilm: this.state.film,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), \" \");\n      }\n\n      this.setState({\n        seleted: false\n      });\n    }\n  }]);\n\n  return ImageResults;\n}(React.Component);\n\nImageResults.propType = {\n  images: propType.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/Users/saiqiong/mui/src/components/image-result/ImageResults.js"],"names":["React","BrowserRouter","Router","Route","Link","propType","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","FilmDetails","ImageResults","state","open","film","currentImg","handleOpen","img","setState","seleted","console","log","handleClose","imageListContent","images","props","seleced","kk","map","show","name","id","type","image","medium","action","Component","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Link }  from 'react-router-dom';\nimport propType from 'prop-types';\nimport { GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport FilmDetails from '../film-details/FilmDetails';\n\nclass ImageResults extends React.Component {\n    state = {\n        open: false,\n        //seleted: false,\n        film:[],\n        currentImg: \"\"\n    }\n\n    handleOpen = img => {\n        //this.setState({ open: true, currentImg: img });\n        this.setState({ seleted: true, film: img });\n        {console.log(this.state.seleted)};\n    }\n\n    handleClose = () => {\n        this.setState({ open: false});\n    }\n\n    render() {\n        let imageListContent;\n        const {images} = this.props;\n        const {seleced} = this.props;\n    //    kk = 4;\n        {console.log(kk)};\n\n        if (images) {\n            imageListContent = (\n                <GridList cols={6}>\n                    {images.map(img => (\n                        <GridTile\n                            title = {img.show.name}\n                            key = {img.show.id}\n                            subtitle={\n                                <span>\n                                    type <strong>{img.show.type}</strong>\n                                </span>\n                            }\n                            actionIcon = {\n                            <IconButton onClick={() => this.handleOpen(img)} >\n                                    <ZoomIn color=\"white\" />\n                                </IconButton>\n                            }\n                            >\n                        <img src={(img.show.image && img.show.image.medium)? img.show.image.medium : 'https://static.addtoany.com/images/dracaena-cinnabari.jpg'} alt=\"\" />\n                        </GridTile>\n                    ))}\n                </GridList>\n            )\n            //<img src={img.largeImageURL} alt=\"\" />\n        } else {\n            console.log('heehehehehehehehheh')\n            imageListContent = null;\n        }\n\n        const action = [\n            <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\n        ];\nconsole.log(this.state.film);\n        if (!this.state.seleted)\n        {\n            return (\n                <div>\n                 {imageListContent}\n                </div>\n            )\n    } else {\n        return ( <div><FilmDetails selectedFilm={this.state.film} /> </div>)\n    }\n        this.setState({seleted : false});\n}\n\n}\n\n\nImageResults.propType = {\n    images: propType.array.isRequired\n}\n\nexport default ImageResults;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/saiqiong/mui/src/components/image-result/ImageResults.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport propType from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nvar ImageResults =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageResults, _React$Component);\n\n  function ImageResults() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageResults)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      currentImg: \"\"\n    };\n\n    _this.handleOpen = function (img) {\n      _this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageResults, [{\n    key: \"render\",\n    value: function render() {\n      var imageListContent;\n      var images = this.props.images;\n      var kk = this.props.kk; //    kk = 4;\n\n      {\n        console.log(kk);\n      }\n      ;\n\n      if (images) {\n        imageListContent = React.createElement(GridList, {\n          cols: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, images.map(function (img) {\n          return React.createElement(GridTile, {\n            title: img.show.name,\n            key: img.show.id,\n            subtitle: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, \"type \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            }, img.show.type)),\n            actionIcon: //    <IconButton onClick={() => this.handleOpen(img.largeImageURL)} >\n            React.createElement(IconButton, {\n              onClick: function onClick() {\n                return React.createElement(React.Fragment, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 47\n                  },\n                  __self: this\n                }, React.createElement(\"h1\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 48\n                  },\n                  __self: this\n                }, \"hello\"));\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, React.createElement(ZoomIn, {\n              color: \"white\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: img.show.image && img.show.image.medium ? img.show.image.medium : 'https://static.addtoany.com/images/dracaena-cinnabari.jpg',\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }));\n        })); //<img src={img.largeImageURL} alt=\"\" />\n      } else {\n        console.log('heehehehehehehehheh');\n        imageListContent = null;\n      }\n\n      var action = [React.createElement(FlatButton, {\n        label: \"Close\",\n        primary: true,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, imageListContent, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        Component: Search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        render: function render(props) {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        action: action,\n        modal: false,\n        open: this.state.open,\n        onRequestClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.currentImg,\n        alt: \"\",\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ImageResults;\n}(React.Component);\n\nImageResults.propType = {\n  images: propType.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/Users/saiqiong/mui/src/components/image-result/ImageResults.js"],"names":["React","BrowserRouter","Router","Route","Link","propType","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageListContent","images","props","kk","console","log","map","show","name","id","type","image","medium","action","Search","width","Component","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,IAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;IAEMC,Y;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,UAAU,EAAE;AAFR,K;;UAKRC,U,GAAa,UAAAC,GAAG,EAAI;AAChB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,UAAU,EAAEE;AAA1B,OAAd;AACH,K;;UAEDE,W,GAAc,YAAM;AAChB,YAAKD,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,K;;;;;;;6BAEQ;AACL,UAAIM,gBAAJ;AADK,UAEEC,MAFF,GAEY,KAAKC,KAFjB,CAEED,MAFF;AAAA,UAGEE,EAHF,GAGQ,KAAKD,KAHb,CAGEC,EAHF,EAIT;;AACI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAAgB;AAAA;;AAEjB,UAAIF,MAAJ,EAAY;AACRD,QAAAA,gBAAgB,GACZ,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKC,MAAM,CAACK,GAAP,CAAW,UAAAT,GAAG;AAAA,iBACX,oBAAC,QAAD;AACI,YAAA,KAAK,EAAIA,GAAG,CAACU,IAAJ,CAASC,IADtB;AAEI,YAAA,GAAG,EAAIX,GAAG,CAACU,IAAJ,CAASE,EAFpB;AAGI,YAAA,QAAQ,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASZ,GAAG,CAACU,IAAJ,CAASG,IAAlB,CADT,CAJR;AAQI,YAAA,UAAU,EACd;AACA,gCAAC,UAAD;AAAY,cAAA,OAAO,EAAE,mBAAM;AAAC,uBACpB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADoB;AAItB,eAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAKY,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALZ,CAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAK,YAAA,GAAG,EAAGb,GAAG,CAACU,IAAJ,CAASI,KAAT,IAAkBd,GAAG,CAACU,IAAJ,CAASI,KAAT,CAAeC,MAAlC,GAA2Cf,GAAG,CAACU,IAAJ,CAASI,KAAT,CAAeC,MAA1D,GAAmE,2DAA7E;AAA0I,YAAA,GAAG,EAAC,EAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBA,CADW;AAAA,SAAd,CADL,CADJ,CADQ,CA4BR;AACH,OA7BD,MA6BO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAL,QAAAA,gBAAgB,GAAG,IAAnB;AACH;;AAED,UAAMa,MAAM,GAAG,CACX,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAE,IAAnC;AAAyC,QAAA,OAAO,EAAE,KAAKd,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CAAf;AAGI,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,gBADL,EAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEc,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAE,gBAAAZ,KAAK;AAAA,iBAC1B,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD0B;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAJJ,EAWI,oBAAC,MAAD;AACI,QAAA,MAAM,EAAIW,MADd;AAEI,QAAA,KAAK,EAAI,KAFb;AAGI,QAAA,IAAI,EAAI,KAAKpB,KAAL,CAAWC,IAHvB;AAII,QAAA,cAAc,EAAG,KAAKK,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAK,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWE,UAArB;AAAiC,QAAA,GAAG,EAAC,EAArC;AAAwC,QAAA,KAAK,EAAE;AAAEoB,UAAAA,KAAK,EAAE;AAAT,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAXJ,CADJ;AAsBP;;;;EAhFsBnC,KAAK,CAACoC,S;;AAmFjCxB,YAAY,CAACP,QAAb,GAAwB;AACpBgB,EAAAA,MAAM,EAAEhB,QAAQ,CAACgC,KAAT,CAAeC;AADH,CAAxB;AAIA,eAAe1B,YAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Link }  from 'react-router-dom';\nimport propType from 'prop-types';\nimport { GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends React.Component {\n    state = {\n        open: false,\n        currentImg: \"\"\n    }\n\n    handleOpen = img => {\n        this.setState({ open: true, currentImg: img });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false});\n    }\n\n    render() {\n        let imageListContent;\n        const {images} = this.props;\n        const {kk} = this.props;\n    //    kk = 4;\n        {console.log(kk)};\n\n        if (images) {\n            imageListContent = (\n                <GridList cols={6}>\n                    {images.map(img => (\n                        <GridTile\n                            title = {img.show.name}\n                            key = {img.show.id}\n                            subtitle={\n                                <span>\n                                    type <strong>{img.show.type}</strong>\n                                </span>\n                            }\n                            actionIcon = {\n                        //    <IconButton onClick={() => this.handleOpen(img.largeImageURL)} >\n                        <IconButton onClick={() => {return (\n                                <React.Fragment>\n                                    <h1>hello</h1>\n                                </React.Fragment>\n                            )} }>\n                                    <ZoomIn color=\"white\" />\n                                </IconButton>\n                            }\n                            >\n                        <img src={(img.show.image && img.show.image.medium)? img.show.image.medium : 'https://static.addtoany.com/images/dracaena-cinnabari.jpg'} alt=\"\" />\n                        </GridTile>\n                    ))}\n                </GridList>\n            )\n            //<img src={img.largeImageURL} alt=\"\" />\n        } else {\n            console.log('heehehehehehehehheh')\n            imageListContent = null;\n        }\n\n        const action = [\n            <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\n        ];\n            return (\n                <div>\n                    {imageListContent}\n\n\n                    <Router>\n                    <Route path=\"/\" Component={Search} />\n                    <Route path=\"/about\" render={props => (\n                            <React.Fragment>\n                            </React.Fragment>\n                        )} />\n                    </Router>\n                    <Dialog\n                        action = {action}\n                        modal = {false}\n                        open = {this.state.open}\n                        onRequestClose= {this.handleClose}>\n                        <img src={this.state.currentImg} alt=\"\" style={{ width: '100%'}} />\n                    </Dialog>\n                </div>\n\n            )\n    }\n}\n\nImageResults.propType = {\n    images: propType.array.isRequired\n}\n\nexport default ImageResults;\n"]},"metadata":{},"sourceType":"module"}
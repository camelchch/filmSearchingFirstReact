{"ast":null,"code":"import _classCallCheck from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/saiqiong/mui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/saiqiong/mui/src/components/image-result/ImageResults.js\";\nimport React from 'react';\nimport propType from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nvar ImageResults =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageResults, _React$Component);\n\n  function ImageResults() {\n    _classCallCheck(this, ImageResults);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ImageResults).apply(this, arguments));\n  }\n\n  _createClass(ImageResults, [{\n    key: \"render\",\n    value: function render() {\n      var imageListContent;\n      var images = this.props.images;\n\n      if (images) {\n        imageListContent = React.createElement(GridList, {\n          cols: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, images.map(function (img) {\n          return React.createElement(GridTile, {\n            title: img.tags,\n            key: img.id,\n            subtitle: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, \"by \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }, img.user)),\n            actionIcon: React.createElement(IconButton, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            }, React.createElement(ZoomIn, {\n              color: \"white\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: img.largeImageURL,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }));\n        }));\n      } else {\n        console.log('heehehehehehehehheh');\n        imageListContent = null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, imageListContent);\n    }\n  }]);\n\n  return ImageResults;\n}(React.Component);\n\nImageResults.propType = {\n  images: propType.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/Users/saiqiong/mui/src/components/image-result/ImageResults.js"],"names":["React","propType","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","imageListContent","images","props","map","img","tags","id","user","largeImageURL","console","log","Component","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;IAEMC,Y;;;;;;;;;;;;;6BACO;AACL,UAAIC,gBAAJ;AADK,UAEEC,MAFF,GAEY,KAAKC,KAFjB,CAEED,MAFF;;AAIL,UAAIA,MAAJ,EAAY;AACRD,QAAAA,gBAAgB,GACZ,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKC,MAAM,CAACE,GAAP,CAAW,UAAAC,GAAG;AAAA,iBACX,oBAAC,QAAD;AACI,YAAA,KAAK,EAAIA,GAAG,CAACC,IADjB;AAEI,YAAA,GAAG,EAAID,GAAG,CAACE,EAFf;AAGI,YAAA,QAAQ,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASF,GAAG,CAACG,IAAb,CADP,CAJR;AAQI,YAAA,UAAU,EACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAcA;AAAK,YAAA,GAAG,EAAEH,GAAG,CAACI,aAAd;AAA6B,YAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdA,CADW;AAAA,SAAd,CADL,CADJ;AAsBH,OAvBD,MAuBO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAV,QAAAA,gBAAgB,GAAG,IAAnB;AACH;;AACG,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,gBADL,CADJ;AAMP;;;;EAtCsBT,KAAK,CAACoB,S;;AAyCjCZ,YAAY,CAACP,QAAb,GAAwB;AACpBS,EAAAA,MAAM,EAAET,QAAQ,CAACoB,KAAT,CAAeC;AADH,CAAxB;AAIA,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport propType from 'prop-types';\nimport { GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends React.Component {\n    render() {\n        let imageListContent;\n        const {images} = this.props;\n\n        if (images) {\n            imageListContent = (\n                <GridList cols={3}>\n                    {images.map(img => (\n                        <GridTile\n                            title = {img.tags}\n                            key = {img.id}\n                            subtitle={\n                                <span>\n                                    by <strong>{img.user}</strong>\n                                </span>\n                            }\n                            actionIcon = {\n                                <IconButton>\n                                    <ZoomIn color=\"white\" />\n                                </IconButton>\n                            }\n                        >\n                        <img src={img.largeImageURL} alt=\"\" />\n                        </GridTile>\n                    ))}\n                </GridList>\n            )\n        } else {\n            console.log('heehehehehehehehheh')\n            imageListContent = null;\n        }\n            return (\n                <div>\n                    {imageListContent}\n                </div>\n\n            )\n    }\n}\n\nImageResults.propType = {\n    images: propType.array.isRequired\n}\n\nexport default ImageResults;\n"]},"metadata":{},"sourceType":"module"}